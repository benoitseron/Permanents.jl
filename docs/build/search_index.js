var documenterSearchIndex = {"docs":
[{"location":"intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"This project implements several algorithms for the exact computation and the estimation of the permanent of a matrix.  ","category":"page"},{"location":"#Permanents.jl-Documentation","page":"Functions","title":"Permanents.jl Documentation","text":"","category":"section"},{"location":"","page":"Functions","title":"Functions","text":"Modules = [Permanents]","category":"page"},{"location":"#Permanents.fast_glynn_perm-Union{Tuple{AbstractMatrix{T}}, Tuple{T}} where T","page":"Functions","title":"Permanents.fast_glynn_perm","text":"Compute the permanent of a matrix A of dimension n using Glynn formula\n\nperm(A) = (2^n-1)^-1 _δ (_k=1^n δ_k) _j=1^n _j=1^n δ_i A_ij\n\nwhere δ  (-1+1)^n with time complexity O(n2^n).\n\nnote: Note\nsource: https://codegolf.stackexchange.com/questions/97060/calculate-the-permanent-as-quickly-as-possible\n\n\n\n\n\n","category":"method"},{"location":"#Permanents.naive-Tuple{AbstractMatrix}","page":"Functions","title":"Permanents.naive","text":"Computes the permanent of the matrix U of dimension n using the definition\n\nperm(U) = _σS_n_i=1^n U_iσ(i)\n\nas a naive implementation in n arithmetic operations.\n\n\n\n\n\n","category":"method"},{"location":"#Permanents.naive_tensor-Tuple{Array}","page":"Functions","title":"Permanents.naive_tensor","text":"Compute the permanent the permanent of a n^3-dimensional 3-tensor of the form\n\nW_klj = M_kj M_lj^* S_lk\n\nfollowing Ryser's algorithm in approximatively 2^2n-1 iterations following Sampling of partially distinguishable bosons and the relation to the multidimensional permanent.\n\nwarning: Warning\nThe current implementation does not use Gray code.\n\n\n\n\n\n","category":"method"},{"location":"#Permanents.ryser-Tuple{AbstractMatrix}","page":"Functions","title":"Permanents.ryser","text":"Compute the permanent of a matrix A of dimension n using Ryser algorithm with Gray ordering\n\nperm(A) = (-1)^n _S  1  n (-1)^S _i=1^n _j  S A_ij\n\nand time complexity O(2^n-1n).\n\nnote: Note\nsource: https://discourse.julialang.org/t/matrix-permanent/10766\n\n\n\n\n\n","category":"method"},{"location":"#Permanents.ryser_tensor-Tuple{Array}","page":"Functions","title":"Permanents.ryser_tensor","text":"Compute the permanent the permanent of a n^3-dimensional 3-tensor of the form\n\nW_klj = M_kj M_lj^* S_lk\n\nfollowing Ryser's algorithm in approximatively 2^2n-1 iterations following Sampling of partially distinguishable bosons and the relation to the multidimensional permanent.\n\nwarning: Warning\nThe current implementation uses Gray code.\n\n\n\n\n\n","category":"method"}]
}
